{"ast":null,"code":"var _jsxFileName = \"/home/fadlytanjung/Python/reactapp/itikom/phone-shop/src/components/home.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Container, Card, Button } from 'react-bootstrap';\nimport { data } from '../dummydb';\nimport { formatRupiah } from '../function';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addToCart } from '../actions/cart';\n\nclass home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      phone: [],\n      amount: 1\n    };\n    this.addToCart = this.addToCart.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      amount: e.target.value\n    });\n  }\n\n  addAmount() {\n    this.setState({\n      amount: this.state.amount + 1\n    });\n  }\n\n  minAmount() {\n    this.setState({\n      amount: this.state.amount - 1\n    });\n\n    if (this.state.amount === 1) {\n      this.setState({\n        amount: 1\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      phone: data\n    });\n  }\n\n  addToCart(id, count) {\n    let data = {\n      id: id,\n      count: count\n    };\n    this.props.addToCart(data);\n  }\n\n  cekExistCart(id) {\n    let cek = this.props.cart.cart_product.filter(el => el.id === id);\n\n    if (cek.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center \",\n      style: {\n        margin: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Produk kami\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.state.phone.map((item, key) => {\n      return React.createElement(Col, {\n        key: key,\n        md: 3,\n        style: {\n          paddingTop: 20,\n          paddingBottom: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          maxHeight: \"400px\"\n        },\n        className: \"custom-href\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/detail/\" + item.id + \"-\" + item.name.toLowerCase().replace(/\\s+/g, '-'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"top\",\n        src: item.image_url,\n        width: \"100%\",\n        height: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/detail/\" + item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, item.name), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, formatRupiah(item.price))), this.cekExistCart(item.id) ? React.createElement(React.Fragment, null, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: this.minAmount.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-minus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        value: this.state.amount,\n        onChange: this.handleChange.bind(this),\n        type: \"text\",\n        className: \"input-cart-amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.addAmount.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))) : React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginTop: 10\n        },\n        onClick: () => this.addToCart(item.id, 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-shopping-cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))));\n    }))));\n  }\n\n}\n\nhome.propTypes = {\n  cart: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  cart: state.cart\n});\n\nexport default connect(mapStateToProps, {\n  addToCart\n})(home);","map":{"version":3,"sources":["/home/fadlytanjung/Python/reactapp/itikom/phone-shop/src/components/home.js"],"names":["React","Component","Row","Col","Container","Card","Button","data","formatRupiah","Link","PropTypes","connect","addToCart","home","constructor","state","phone","amount","bind","handleChange","e","setState","target","value","addAmount","minAmount","componentDidMount","id","count","props","cekExistCart","cek","cart","cart_product","filter","el","length","render","margin","map","item","key","paddingTop","paddingBottom","maxHeight","name","toLowerCase","replace","image_url","price","marginTop","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Row,Col,Container,Card,Button} from 'react-bootstrap';\nimport {data} from '../dummydb';\nimport {formatRupiah} from '../function';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addToCart } from '../actions/cart';\n\nclass home extends Component{\n\n    constructor(){\n        super();\n        this.state={\n            phone:[],\n            amount:1\n        }\n        this.addToCart = this.addToCart.bind(this)\n    }\n\n    handleChange(e){\n        this.setState({amount:e.target.value})\n    }\n\n    addAmount(){\n        this.setState({amount:this.state.amount+1})\n    }\n    minAmount(){\n        this.setState({amount:this.state.amount-1})\n        if(this.state.amount === 1){\n            this.setState({amount:1})\n        }\n    }\n\n\n    componentDidMount(){\n        this.setState({phone:data})\n    }\n\n    addToCart(id,count){\n       \n        let data = {\n            id:id,\n            count:count\n        }\n        this.props.addToCart(data)\n    }\n    \n    cekExistCart(id){\n        let cek = this.props.cart.cart_product.filter(el=>el.id === id);\n        if(cek.length > 0){\n            return true\n        }else{\n            return false\n        }\n    }\n    render(){\n        \n\n        return(\n            <>\n                <Container>\n                    <h2 className=\"text-center \" style={{margin:20}}>Produk kami</h2>\n                    <Row >\n                        {this.state.phone.map((item,key)=>{\n                            return <Col key={key} md={3} style={{paddingTop:20,paddingBottom:20}}>\n                            <Card style={{maxHeight:\"400px\"}} className=\"custom-href\">\n                                <Link to={\"/detail/\"+item.id+\"-\"+item.name.toLowerCase().replace(/\\s+/g, '-')}>\n                                    <Card.Img variant=\"top\" src={item.image_url} width=\"100%\" height=\"200px\" />\n                                </Link>\n                                    <Card.Body>\n                                    <Link to={\"/detail/\"+item.id}>\n                                            <Card.Title>{item.name}</Card.Title>\n                                            <Card.Text>\n                                            {formatRupiah(item.price)}\n                                            </Card.Text>\n                                    </Link>\n                                    {this.cekExistCart(item.id) ? \n                                    <>\n                                        <Button variant=\"danger\"\n                                        onClick={this.minAmount.bind(this)}\n                                    ><i className=\"fa fa-minus\"></i></Button>\n                                        <input value={this.state.amount} \n                                        onChange={this.handleChange.bind(this)}\n                                        type=\"text\" className=\"input-cart-amount\"></input>\n                                    <Button \n                                        onClick={this.addAmount.bind(this)}\n                                    ><i className=\"fa fa-plus\"></i></Button>\n                                    </>\n                                    : <Button variant=\"primary\" style={{marginTop:10}}\n                                        onClick={()=>this.addToCart(item.id,1)}\n                                        >\n                                        <i className=\"fa fa-shopping-cart\"></i></Button>}\n                                    \n                                </Card.Body>\n                                \n                                </Card>\n                            </Col>\n                        })}\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n}\nhome.propTypes = {\n    cart: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    cart:state.cart\n})\n\nexport default connect(mapStateToProps, { addToCart })(home)"]},"metadata":{},"sourceType":"module"}